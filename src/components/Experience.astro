---
//@ts-nocheck
const experienceData = await fetch(
  "https://frontend-design-theme.netlify.app/api/experience"
).then((response) => response.json());
// console.log(experienceData);
import MicroTitles from "./Micro_titles.astro";
const percent = 0;
---

<section class="experience-container full">
<section class="experinence-wrapper">
    <div class="experience">
        <MicroTitles class="secondary-micro-title">Experience</MicroTitles>
        <h2>More than 25 years of experience</h2>
        <p>3000+ our clients are insured around the World</p>
    </div>{
 experienceData.stats.map((item) => (
    <div class="stats">
        <div class="stat" style={`--percent:${item.value};`}></div> 
    <span>{item.label}</span>
     </div>
    ))
}
</section>
</section>




<style>

.experience-container{
    background-color: #FBC336;
    padding-block:var(--section-padding);
}
.experinence-wrapper{
    display: grid;
    grid-column: content;
    grid-template-columns: repeat(4, 1fr);
    gap: 3rem;
}
.experience{
    grid-column: 1;
    align-items: center;
    margin-block-end: 2rem;
    > * + * {
    padding-block-start: var(--flow-space, 1.2rem);
  }
  p{
    color: var(--primary-3);
  }
}




    .stats {
    gap: var(--gap-s);
    width: min(400px, 100%);
    background-color: #FBC336;
        font-size: 2rem;
    font-weight:700;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    span{
        font-weight: var(--font-weight-heading);
        font-size: 1rem;
    } 
}

.stat {
  --p: calc(var(--percent) * 1%);
  --border-width: 5px;
  --border-color: #fff;
  text-align: center;

  aspect-ratio: 1;
  width: 150px;
  border-radius: calc(Infinity * 1px);
  border: var(--border-width) solid #f6363600;
  background: radial-gradient(
        circle at 50% calc(var(--border-width) / 2),
        var(--border-color) calc(var(--border-width) / 2),
        transparent 0
      )
      border-box,
    linear-gradient(#FBC336, #FBC336) padding-box,
    conic-gradient(var(--border-color) var(--p), rgba(190, 190, 190, 0.442) 0) border-box;

  display: grid;
  counter-reset: count var(--percent);

  &::before,
  &::after {
    grid-area: 1 / 1;
  }

  &::after {
    content: counter(count) "%";
    place-self: center;
  }

  &::before {
    content: "";
    aspect-ratio: 1;
    border-radius: calc(Infinity * 1px);
    width: calc(var(--border-width) * 3);
    background: #000;
    border: 2px solid #fff;
    offset-path: border-box;
    offset-distance: var(--p);
    offset-anchor: 50% calc(50% - var(--border-width) / 2);
    transition: var(--p) 3s var(--easing);
    @starting-style {
      translate: 0, 25%;
    }
  }
}


</style>